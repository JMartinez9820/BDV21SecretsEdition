//Actor Fire2ndBarrel: Inventory
//{
 //Inventory.MaxAmount 1
//}

//Actor AbleToBeInspected: Inventory
//{
 //Inventory.MaxAmount 1
//}


Actor InspectShotgun: Inventory
{
 Inventory.MaxAmount 1
}

Actor ReloadingShotgun: Inventory
{
 Inventory.MaxAmount 1
}

Actor FireFromReloading: Inventory
{
 Inventory.MaxAmount 1
}

ACTOR Shot_Gun : BrutalWeapon
{
	Game Doom
	SpawnID 27
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "AmmoShell"
	Weapon.AmmoType2 "ShotgunAmmo"
	Inventory.PickupMessage "$GOTSHOTGUN"
    Inventory.PickupSound "weapons/sgpump"
	Obituary "$OB_MPSHOTGUN"
    AttackSound "None"
    +WEAPON.NOALERT
    +WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	+FORCEXYBILLBOARD
	Scale 0.9
	Tag "Shotgun"
	States
	{
	
	InspectShotgun:
	    SHTN A 0 A_Giveinventory("InspectShotgun",1)
		SHTR A 1 A_WeaponReady
	    SHTN BCDEFG 1 A_WeaponReady
		SHTN G 15 A_WeaponReady
	    //SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26) // The actor that fires the projectile has a delay of 1 tic
	    SHTN FEDCB 1 A_WeaponReady
	    SHTR A 1 A_WeaponReady
	    SHTN A 1 A_WeaponReady
	    SHT8 ED 1 A_WeaponReady
	    SHT8 A 15 A_WeaponReady
	    SHT8 DE 1 A_WeaponReady
		Goto Ready3
		
    Spawn:
		SHTC A -1
		Stop
    	
	Select:
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_Takeinventory("FistsSelected",1)
		SHTN A 0 A_Takeinventory("SawSelected",1)
		SHTN A 0 A_Giveinventory("ShotgunSelected",1)
		SHTN A 0 A_Takeinventory("SSGSelected",1)
		SHTN A 0 A_Takeinventory("MinigunSelected",1)
		SHTN A 0 A_Takeinventory("PlasmaGunSelected",1)
		SHTN A 0 A_Takeinventory("RocketLauncherSelected",1)
		SHTN A 0 A_Takeinventory("GrenadeLauncherSelected",1)
		SHTN A 0 A_Takeinventory("BFGSelected",1)
		SHTN A 0 A_Takeinventory("BFG10kSelected",1)
		SHTN A 0 A_Takeinventory("RailGunSelected",1)
		SHTN A 0 A_Takeinventory("SubMachineGunSelected",1)
		SHTN A 0 A_Takeinventory("RevenantLauncherSelected",1)
		SHTN A 0 A_Takeinventory("LostSoulSelected",1)
		SHTN A 0 A_Takeinventory("FlameCannonSelected",1)
		SHTN A 0 A_Takeinventory("HasBarrel",1)
		SHTN A 0 A_TakeInventory("TossGrenade", 1)
		TNT1 AAAAAAAAA 0 A_Raise
		TNT1 AAAA 0 A_Raise

	SelectAnimation:
        //TNT1 A 0 A_JumpIfInventory("InspectShotgun", 1,1)
		//Goto InspectShotgun
		TNT1 AAAA 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		SHTN A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "PuristGun")
        //SHSS ABCD 1 A_JumpIfInventory("GoFatality", 1, "Steady")
		SHSS D 1
		SHTN HGFEDCB 1
		SHTN A 0 A_PlaySound("weapons/sgpump")
		//SHTN A 0 A_GunFlash

	Ready3:	
	Ready:
	    TNT1 A 0
		{
		If(CountInv("ShotgunAmmo") >=11 ) {return state("FixAmmo");}
		//Else If(CountInv("FireFromReloading") >=11 ) {return state("FireFromReloading");}
		//Else If(CountInv("ReloadingShotgun") >=11 ) {return state("FireFromReloading");}
		Else If(CountInv("Kicking") >=1 ) {return state("DoKick");}
		Else If(CountInv("Taunting") >=1 ) {return state("Taunt");}
		Else If(CountInv("Salute1") >=1 ) {return state("Salute");}
		Else If(CountInv("Unloading") >=1 ) {return state("Unload");}
		Else If(CountInv("Zoomed") >=1 ) {return state("REady2");}
		Else If(CountInv("FiredPrimary") >=1 ) {return state("Fire");}
		Else {return state("");}
		}
		//SHTN A 0 A_JumpIfInventory("ReloadingShotgun", 1, "FireFromReloading")
        //SHTN A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        //SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        //SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload")
		//SHTN A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		//SHTN A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		//SHTN A 0 A_JumpIfInventory("Unloading",1,"Unload")
		//SHTN A 0 A_JumpIfInventory("Zoomed",1,"REady2")
		//SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		//SHTN A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee")
	OkToFire:
		TNT1 A 0 A_SetCrosshair(45)
		SHTN A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
        Goto Ready
	FixAmmo:
	    PIST F 0 A_Takeinventory("ShotgunAmmo",99999)
		PIST F 0 A_Giveinventory("ShotgunAmmo",10)
		Goto Ready	
		
	Ready2:
        SHTN A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload")
		SHTN A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		SHTN A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		SHTN A 0 A_JumpIfInventory("Unloading",1,"Unload")
		SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHTN A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		TNT1 A 0 A_SetCrosshair(41)
		Loop
	
	Deselect:
		SHTN A 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_TakeInventory("TossGrenade", 1)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("UseShotgunStrap",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN BCDEFGH 1
		SHSS D 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 0 A_Lower
		Wait

	//FireFromReloading:
	//SHTN A 0 A_Takeinventory("FireFromReloading",1)
	
    Fire:
        SHTN A 0 A_Takeinventory("Reloading",1)
		SHTN A 0 A_JumpIfInventory("Zoomed",1,"Fire2")
		
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
        Goto NoAmmo
        TNT1 AAAA 0
		// You can't fire during reload, so this way you can go back to ready and fire.
		SHTN A 0 A_JumpIfInventory("ReloadingShotgun", 1, "FinishedInsertingShellsEmergency")
		//SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
        SHTN A 0 A_AlertMonsters
        SHTN A 0 A_PlaySound("SGFIRE", 1)
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
        SHTN A 0
		SHTN A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
		//TNT1 AAAAAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
		//TNT1 AAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1)
		SHTN A 0 A_FireBullets (5, 1, 5, 20, "ShotgunPuff", FBF_NORANDOM,8192,"Tracer",-5)
		SHTN A 0 A_FireBullets (2.5, 2.5, 5, 20, "ShotgunPuff2", FBF_NORANDOM,8192,"Tracer",-5)
		SHTA AB 1 BRIGHT
	    SHTA CD 1 A_SetPitch(-2.0 + pitch)
		SHTA D 2
		SHTA E 1
		SHTN A 1
		Goto Pump1
	
   Pump1:	
	   SHTN A 0
	   //SHTN A 0 A_GiveInventory ("Pumping", 1)
	   //SHTN A 0 A_GiveInventory ("GoSpecial", 1)
	   
	   // All this pitch and angle changes are to simulate view changes
	   //SHTR A 1 A_WeaponReady(WRF_NOFIRE)
	   SHTN BCDEFGHIJ 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
	   }
	   SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26) // The actor that fires the projectile has a delay of 1 tic
	   SHTN K 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(+0.1 + angle);
				 //A_SetPitch(+0.1  + pitch);
				 A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN LMNOPON 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(-0.1 + angle);
				 //A_SetPitch(-0.1  + pitch);
				 //A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN M 1
	   {
	    A_WeaponReady(WRF_NOFIRE);
		A_PlaySound("weapons/sgpump", 3);
	   }
	   //SHTN L 1
	   SHTN LKJIHGFEDCBA 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(-0.1 + angle);
				 //A_SetPitch(-0.1  + pitch);
				 //A_PlaySound("weapons/sgpump", 3);
	   }
	   //SHTN FEDCB 1 A_WeaponReady(WRF_NOFIRE)
	   Goto Ready3//ReadyToFireAgain
   
   
   Pump2:
       SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	  // SHTN BCDEFGHIJ 1
	   //{
		 // A_WeaponReady(WRF_NOFIRE);
	   //}
	   //SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26) // The actor that fires the projectile has a delay of 1 tic
	   SHTN JK 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(+0.1 + angle);
				 //A_SetPitch(+0.1  + pitch);
				 A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN LMNOPON 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(-0.1 + angle);
				 //A_SetPitch(-0.1  + pitch);
				 //A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN M 1
	   {
	    A_WeaponReady(WRF_NOFIRE);
		A_PlaySound("weapons/sgpump", 3);
	   }
	   //SHTN L 1
	   SHTN LKJ 1//IHGFEDCBA 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		        //A_SetAngle(-0.1 + angle);
				 //A_SetPitch(-0.1  + pitch);
				 //A_PlaySound("weapons/sgpump", 3);
	   }
	   //SSHR A 1
	   //SHTN G 1 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB)
	   //SSHR ABCD 1 A_WeaponReady(WRF_NOFIRE)
	   Goto InsertingShells
		
	ReadyToFireAgain:	
		//SHTN A 6 <-- Old frame
        SHTN A 1 Offset(10,36) // <-- New frames
        SHTN A 1 Offset(9,40) //
        SHTN A 1 Offset(4,40) //
        SHTN A 1 Offset(0,32) //
        SHTN A 0 A_Refire
		Goto Ready3
		
	Fire2:
		SHTN A 0 A_Takeinventory("Reloading",1)
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,1)
        Goto NoAmmo
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
        SHTN A 0 A_AlertMonsters
        SHTN A 0 A_PlaySound("SGFIRE", 1)
		SHTN A 0 A_SpawnItemEx("PlayerMuzzle1",30,0,45)
		SHTN A 0 A_FireBullets (5, 1, 5, 20, "ShotgunPuff", FBF_NORANDOM)
		SHTN A 0 A_FireBullets (2.5, 2.5, 5, 20, "ShotgunPuff2", FBF_NORANDOM)
		//SHTN A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 3)//Tactical Mode deals extra damage
		//SHTN A 0 A_FireBullets (6, 3, 5, 13, "ShotgunPuff2", FBF_NORANDOM)
		//SHTN A 0 A_SetPitch(pitch-10)
		SHTN A 0
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
		TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, 0, 0, random(-5,5))
		SHTN A 0 A_SetPitch(-10.0 + pitch)
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1)
        SHT8 F 1 BRIGHT A_SetPitch(+2.0 + pitch)
		SHT8 GHIA 1 A_SetPitch(+2.0 + pitch)
   Pump3:
		SHT8 A 2	
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo", 1, 1)
		Goto NoAmmo3
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SHTN A 0 A_PlaySound("weapons/sgpump", 5)
		SHT8 JKLL 1
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, 1)
		SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,14,0)
		SHTN A 0 A_TakeInventory("ShotgunWasEmpty", 1)
		SHT8 L 1
		SHTN A 0 A_PlaySound("weapons/sgpump", 5)
		SHT8 KJ 1
		SHT8 A 1
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHTN A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")//If still pressing alt fire, it means its holding aim
		SHTN A 0 A_REfire
		Goto Ready2
	
	AltFire:
        SHTN A 0
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_JumpIfInventory("Zoomed",1,"NoAim")
		SHTN A 0 A_Giveinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.2)
		SHTN A 0 A_Giveinventory("ADSmode",1)
        SHT8 ED 1
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump3")
        SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 2 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHTN A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")
        Goto Ready2
		
	   HoldAim:	
	    SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")
		
	NoAim:	
        TNT1 AAAAAA 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHT8 DE 1
        Goto Ready
		
		
	CheckSprint:
		SHTN A 1 A_WeaponReady(WRF_NOFIRE)
		SHTN A 0 A_Takeinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		SHTN A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint")
		Goto Ready
		
	StartSprint:
		SHTN A 1 A_WeaponReady(WRF_NOFIRE)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired")
		
	Sprinting:	
		STRN A 0 offset(-9,32) 
		SHTN A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		SHTN A 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired")
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
		SHTN A 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2)
		SHTN A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
		SHTN A 0 offset(-9,32)
		STRN A 1 offset(-9,34) A_SetPitch(pitch -0.5)
		STRN A 1 offset(-6,36) A_SetPitch(pitch -0.5)
		STRN A 1 offset(-3,38) A_SetPitch(pitch -0.5)
		STRN A 1 offset(0,38) A_SetPitch(pitch -0.5)
		STRN A 1 offset(3,36) A_SetPitch(pitch -0.5)
		STRN A 1 offset(6,34) A_SetPitch(pitch -0.5)
		STRN A 1 offset(9,32) A_SetPitch(pitch -0.5)
		SHTN A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
		SHTN A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload")
		SHTN A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
		SHTN A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
		STRN A 1 offset(9,34) A_SetPitch(pitch +0.5)
		STRN A 1 offset(6,36) A_SetPitch(pitch +0.5)
		STRN A 1 offset(3,38) A_SetPitch(pitch +0.5)
		STRN A 1 offset(0,38) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-3,36) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-6,34) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-9,32) A_SetPitch(pitch +0.5)
		SHTN A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
		SHTN A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting")
		
		Goto StopSprint
	StopSprintTired:
		SHTN A 1
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		SHTN A 0 A_PlaySound("Tired", 2)
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		Goto Ready
	StopSprint:
		STRN A 1
		SHTN A 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired")
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		Goto Ready
	
	
    ReloadWithNoAmmoLeft:
    Reload:
	    SHTN A 0
		SHTN A 0 A_TakeInventory("Reloading", 1)
		//SHTN A 0 A_GiveInventory("Reloading", 1)
		SHTN A 0 A_JumpIfInventory("AmmoShell", 1, 2)
		Goto NoAmmo
		SHTN A 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 1 A_WeaponReady
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"OkToFire")
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally")//Check if there is a shell in the chamber
		SHTN A 0 A_GiveInventory("ShotgunWasEmpty", 1)//This means there is no shell in the chamber
	
	ReloadNormally:	
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,1)//If there is no reserve ammo, don't reload, go back to Ready
        Goto Ready
		SHTN A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")//Check if reloads are disabled.
		SHTN BCDEFGHIJ 1 A_WeaponReady(WRF_NOSWITCH)
		SSHR A 1 A_WeaponReady(WRF_NOSWITCH)
        
	 InsertingShells:
		SHTN A 0 A_GiveInventory("ReloadingShotgun", 1)
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,2)//if there are no more reserve shells, finish reload.
        //Goto Pump2
		Goto FinishedInsertingShells
		SHTN A 0
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SSHR A 0 A_TakeInventory("Reloading", 1)
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishedInsertingShells")
        
	InsertShellAnimation:	
		SHTN A 0
		SSHR AAA 1
		{
		  A_WeaponReady(WRF_NOSWITCH);
	    }
		SSHR BCDE 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
        SSHR F 1
		{
		 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		 A_PlaySound("insertshell");
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("AmmoShell",1);
		}
		SSHR G 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		//TNT1 A 0 
		//{
		 //A_Giveinventory("ShotgunAmmo",1);
		 //A_Takeinventory("AmmoShell",1);
		//}
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty",1,"Pump2")
		SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishedInsertingShells")//If there are 9+1 shells, stop it immediately
        Goto InsertingShells
		
	FinishedInsertingShells:
		SHTN A 0 A_TakeInventory("ReloadingShotgun", 1)
		SHTN A 0 A_Takeinventory("Reloading",1)
		//SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
		SHTN JIHGFEDCB 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		SHTN A 0 A_Takeinventory("Reloading",1)
		Goto Ready3
	
	FinishedInsertingShellsEmergency:
	    //SHTN A 0 A_GiveInventory("FireFromReloading", 1)
		SHTN A 0 A_TakeInventory("ReloadingShotgun", 1)
		SHTN A 0 A_Takeinventory("Reloading",1)
		//SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
		SHTN JIHGFEDCB 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		SHTN A 0 A_Takeinventory("Reloading",1)
		Goto Ready3
		
	
	 TurboReload:
		SHSS BC 0
	TurboBullets:	
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishTurboReload")
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3)
        Goto FinishTurboReload
        TNT1 AAAA 0
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1)
		Goto TurboBullets
	FinishTurboReload:
		SHTN A 1
		SHTN A 1 A_Refire
		Goto Ready3
		
	TurboReload2:
		SHSS BC 0
	TurboBullets2:	
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishTurboReload")
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3)
        Goto FinishTurboReload2
        TNT1 AAAA 0
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1)
		Goto TurboBullets2
	FinishTurboReload2:
		SHT8 A 1 A_Refire
		Goto Ready2

      PuristGun:
		TNT1 A 1
		SHTN A 0 A_GiveInventory("ClassicShotgun", 1)
		SHTN A 0 A_TakeInventory("Shot_Gun", 1)
		TNT1 A 10
		Goto Ready2
		
	
		
	Unload:
		SHTN A 1
		SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_Takeinventory("Unloading",1)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_GiveInventory("ShotgunWasEmpty", 1)
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
        Goto OkToFire
        TNT1 AAA 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SHTN A 0 A_Takeinventory("Unloading",1)
		SHTN ABCDEF 1
		
	RemoveBullets:
		TNT1 AAAA 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
		Goto FinishUnload
        TNT1 AAAAAA 0
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1)
		SHTN A 0 A_Giveinventory("AmmoShell",1)
		
		SHTN G 1 A_WeaponReady(WRF_NOFIRE)
	   SHTN H 1
	   {
	   A_WeaponReady(WRF_NOFIRE);
	   A_PlaySound("weapons/sgpump", 3);
	   }
	   //SHTN A 0 A_SetPitch(+1 + pitch)
	   SHTN IJ 1 A_WeaponReady(WRF_NOFIRE)
	   //SHTN A 0 A_SetPitch(-1 + pitch)
	   SHTN KL 1 A_WeaponReady(WRF_NOFIRE)
	   SHTN KJIH 1 A_WeaponReady(WRF_NOFIRE)
	   SHTN A 0 A_Giveinventory("ShotgunWasEmpty",1)
	   SHTN GF 1 A_WeaponReady(WRF_NOFIRE)
		Goto RemoveBullets
	
	FInishUnload:
		SHTN EDCBA 1
		SHTN A 0 A_Takeinventory("Unloading",1)
		Goto OkToFire	
		
		
	DoKickReloading:
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
        SHTN A 0 A_PlaySound("KICK")
		SHTN A 0 SetPlayerProperty(0,1,0)
		KICK BCD 1
		RIFF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
        KICK H 3
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK I 1
		KICK GFEDCBA 1 
		RIBA A 0 A_Takeinventory("Kicking",1)
		SHTN A 0 SetPlayerProperty(0,0,0)
		Goto InsertingShells
		
	Steady:
		TNT1 A 1
		Goto Ready
		
		

	NoAmmo:
		RIFG A 0
		RIFG A 0 A_ZoomFactor(1.0)
		RIFG A 0 A_Takeinventory("Zoomed",1)
		RIFG A 0 A_Takeinventory("ADSmode",1)
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		TNT1 A 0 A_PlaySound("weapons/empty", 4)
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		SHTN A 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY)
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload")
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo2")
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload")
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2")
		Goto Ready3
		
		
	NoAmmo3:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		SHT8 A 4 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY)
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload")
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload2")
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo3")
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload")
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo3")
		Goto Ready3
	
	FlashMelee:
	Flashkick:
	    SHTN BCD 1
	    SHTN E 13
		SHTN DCB 1
		Stop
	
	FlashMelee:
	    SHTN BCD 1
	    SHTN E 1
		SHTN DCB 1
		Stop
	
	AirFlashkick:
	    SHTN BCD 1
	    SHTN E 14
		SHTN DCB 1
		Stop
	
	SlideFlashKick:
	    SHTN BCD 1
	    SHTN E 13
		Stop
	
	SlideFlashKickStop:
	    SHTN E 10
		SHTN CDE 1
		Stop
			
	}
}

ACTOR ShotgunAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 10
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 10
   Inventory.Icon "SHTCA0"
}



